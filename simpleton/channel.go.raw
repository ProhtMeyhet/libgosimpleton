
// give back a channel in which to push items of a list of #TYPE in a separate goroutine
func #TYPECAMELListToChannel(list ...#TYPE) <-chan #TYPE {
	// be lenient on memory
	size := len(list); if size > 50 { size = 50 }
	channel := make(chan #TYPE, size)
	go func() {
		for _, item := range list {
			channel <-item
		}
		close(channel)
	}()
	return channel
}

// read from a channel, wait till its closed and return all read items
func #TYPECAMELChannelToList(channel <-chan #TYPE) (list []#TYPE) {
	for item := range channel {
		list = append(list, item)
	}
	return
}
